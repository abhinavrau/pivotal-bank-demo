---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app.kubernetes.io/name: "user-service"
    app.kubernetes.io/version: "latest"
  name: "user-service"
spec:
  ports:
  - name: "http"
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: "user-service"
    app.kubernetes.io/version: "latest"
  type: "ClusterIP"
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  annotations:
    app.dekorate.io/commit-id: "fe7711eb3b3987f6a736e73da772a59a50913cae"
    app.dekorate.io/vcs-url: "https://github.com/abhinavrau/pivotal-bank-demo.git"
  labels:
    app.kubernetes.io/name: "user-service"
    app.kubernetes.io/version: "latest"
  name: "user-service"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "user-service"
      app.kubernetes.io/version: "latest"
  template:
    metadata:
      annotations:
        app.dekorate.io/commit-id: "fe7711eb3b3987f6a736e73da772a59a50913cae"
        app.dekorate.io/vcs-url: "https://github.com/abhinavrau/pivotal-bank-demo.git"
      labels:
        app.kubernetes.io/name: "user-service"
        app.kubernetes.io/version: "latest"
    spec:
      containers:
      - env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "SPRING_PROFILES_ACTIVE"
          value: "kubernetes"
        - name: "SPRING_DATASOURCE_USERNAME"
          value: "root"
        - name: "SPRING_DATASOURCE_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-root-password"
              name: "acme-mysql"
              optional: false
        image: "abhinavrau/user-service:latest"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/health/liveness"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: "user-service"
        ports:
        - containerPort: 8080
          name: "http"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/health/readiness"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 20
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
